services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db

  trino:
    image: trinodb/trino:443
    container_name: trino
    ports:
      - "8080:8080"
    volumes:
      - ./config/trino/etc:/etc/trino
    depends_on:
      - mongodb

  superset:
    image: apache/superset:3.0.0
    container_name: superset
    ports:
      - "8088:8088"
    volumes:
      - ./config/superset/superset_config.py:/app/superset_config.py
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - PREVENT_UNSAFE_DB_CONNECTIONS=${PREVENT_UNSAFE_DB_CONNECTIONS}
      - SUPERSET_CONFIG_PATH=${SUPERSET_CONFIG_PATH}
    depends_on:
      - trino
      - postgres
    command: >
      bash -c "
        pip install sqlalchemy-trino==0.5.0 trino==0.328.0 &&
        superset db upgrade &&
        superset fab create-admin --username ${SUPERSET_ADMIN_USERNAME} --firstname ${SUPERSET_ADMIN_FIRSTNAME} --lastname ${SUPERSET_ADMIN_LASTNAME} --email ${SUPERSET_ADMIN_EMAIL} --password ${SUPERSET_ADMIN_PASSWORD} &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger
      "
  

  postgres:
    image: postgres:13
    container_name: superset_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"       # <-- expose le port ici
    volumes:
      - superset_pgdata:/var/lib/postgresql/data


  data-generator:
    build: .
    container_name: data-generator
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=${MONGODB_URI}
    restart: "no"

  sonarqube:
    image: sonarqube:10.3-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=${SONAR_JDBC_URL}
      - SONAR_JDBC_USERNAME=${SONAR_JDBC_USERNAME}
      - SONAR_JDBC_PASSWORD=${SONAR_JDBC_PASSWORD}
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=${SONAR_ES_BOOTSTRAP_CHECKS_DISABLE}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - sonar_postgres

  sonar_postgres:
    image: postgres:13
    container_name: sonar_postgres
    environment:
      POSTGRES_DB: ${SONAR_POSTGRES_DB}
      POSTGRES_USER: ${SONAR_POSTGRES_USER}
      POSTGRES_PASSWORD: ${SONAR_POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - sonar_pgdata:/var/lib/postgresql/data

  sonar-scanner:
    image: sonarsource/sonar-scanner-cli:latest
    container_name: sonar-scanner
    env_file:
      - .env
    volumes:
      - .:/usr/src
    working_dir: /usr/src
    depends_on:
      - sonarqube
    profiles:
      - scanner

volumes:
  mongo_data:
  superset_pgdata:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonar_pgdata:
